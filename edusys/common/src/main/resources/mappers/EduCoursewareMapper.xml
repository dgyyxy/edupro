<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.edu.common.dao.mapper.EduCoursewareMapper">
    <resultMap id="BaseResultMap" type="com.edu.common.dao.model.EduCourseware">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="time" jdbcType="INTEGER" property="time"/>
        <result column="content" jdbcType="VARCHAR" property="content"/>
        <result column="picture" jdbcType="VARCHAR" property="picture"/>
        <result column="uri_str" jdbcType="VARCHAR" property="uriStr"/>
        <result column="category_name" jdbcType="VARCHAR" property="category"/>
        <result column="category_id" jdbcType="INTEGER" property="categoryId"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, name, time, content, picture, uri_str, category, category_id
    </sql>

    <sql id="Base_Column_List_0">
        id, name, time, content, picture, uri_str, (select ect.name from edu_courseware_type ect where ect.id = ec.category_id) category_name, category_id
    </sql>
    <select id="selectByExample" parameterType="com.edu.common.dao.model.EduCoursewareExample"
            resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List_0"/>
        from edu_courseware ec
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <if test="limit != null">
            <if test="offset != null">
                limit ${offset}, ${limit}
            </if>
            <if test="offset == null">
                limit ${limit}
            </if>
        </if>
    </select>

    <select id="getIdsByNameStr" parameterType="java.lang.String" resultType="java.lang.Integer">
        select id
        from edu_courseware ec
        where name like concat(concat('%',#{namestr}),'%')
    </select>

    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from edu_courseware
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from edu_courseware
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="com.edu.common.dao.model.EduCoursewareExample">
        delete from edu_courseware
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.edu.common.dao.model.EduCourseware">
    insert into edu_courseware (id, name, time, 
      content, picture, uri_str, 
      category, category_id)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{time,jdbcType=INTEGER}, 
      #{content,jdbcType=VARCHAR}, #{picture,jdbcType=VARCHAR}, #{uriStr,jdbcType=VARCHAR}, 
      #{category,jdbcType=VARCHAR}, #{categoryId,jdbcType=INTEGER})
  </insert>
    <insert id="insertSelective" parameterType="com.edu.common.dao.model.EduCourseware">
        insert into edu_courseware
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="time != null">
                time,
            </if>
            <if test="content != null">
                content,
            </if>
            <if test="picture != null">
                picture,
            </if>
            <if test="uriStr != null">
                uri_str,
            </if>
            <if test="category != null">
                category,
            </if>
            <if test="categoryId != null">
                category_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="time != null">
                #{time,jdbcType=INTEGER},
            </if>
            <if test="content != null">
                #{content,jdbcType=VARCHAR},
            </if>
            <if test="picture != null">
                #{picture,jdbcType=VARCHAR},
            </if>
            <if test="uriStr != null">
                #{uriStr,jdbcType=VARCHAR},
            </if>
            <if test="category != null">
                #{category,jdbcType=VARCHAR},
            </if>
            <if test="categoryId != null">
                #{categoryId,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.edu.common.dao.model.EduCoursewareExample"
            resultType="java.lang.Long">
        select count(*) from edu_courseware
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <select id="sumTimeByExample" parameterType="com.edu.common.dao.model.EduCoursewareExample"
            resultType="java.lang.Long">
        select sum(time) from edu_courseware
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update edu_courseware
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.name != null">
                name = #{record.name,jdbcType=VARCHAR},
            </if>
            <if test="record.time != null">
                time = #{record.time,jdbcType=INTEGER},
            </if>
            <if test="record.content != null">
                content = #{record.content,jdbcType=VARCHAR},
            </if>
            <if test="record.picture != null">
                picture = #{record.picture,jdbcType=VARCHAR},
            </if>
            <if test="record.uriStr != null">
                uri_str = #{record.uriStr,jdbcType=VARCHAR},
            </if>
            <if test="record.category != null">
                category = #{record.category,jdbcType=VARCHAR},
            </if>
            <if test="record.categoryId != null">
                category_id = #{record.categoryId,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update edu_courseware
        set id = #{record.id,jdbcType=INTEGER},
        name = #{record.name,jdbcType=VARCHAR},
        time = #{record.time,jdbcType=INTEGER},
        content = #{record.content,jdbcType=VARCHAR},
        picture = #{record.picture,jdbcType=VARCHAR},
        uri_str = #{record.uriStr,jdbcType=VARCHAR},
        category = #{record.category,jdbcType=VARCHAR},
        category_id = #{record.categoryId,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.edu.common.dao.model.EduCourseware">
        update edu_courseware
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="time != null">
                time = #{time,jdbcType=INTEGER},
            </if>
            <if test="content != null">
                content = #{content,jdbcType=VARCHAR},
            </if>
            <if test="picture != null">
                picture = #{picture,jdbcType=VARCHAR},
            </if>
            <if test="uriStr != null">
                uri_str = #{uriStr,jdbcType=VARCHAR},
            </if>
            <if test="category != null">
                category = #{category,jdbcType=VARCHAR},
            </if>
            <if test="categoryId != null">
                category_id = #{categoryId,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.edu.common.dao.model.EduCourseware">
    update edu_courseware
    set name = #{name,jdbcType=VARCHAR},
      time = #{time,jdbcType=INTEGER},
      content = #{content,jdbcType=VARCHAR},
      picture = #{picture,jdbcType=VARCHAR},
      uri_str = #{uriStr,jdbcType=VARCHAR},
      category = #{category,jdbcType=VARCHAR},
      category_id = #{categoryId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
    <cache type="org.mybatis.caches.ehcache.LoggingEhcache"/>
</mapper>